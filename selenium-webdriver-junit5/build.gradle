apply plugin: "java"

jar {
    archiveBaseName = "selenium-webdriver-junit5"
    archiveVersion = "1.0.0-SNAPSHOT"
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += "-parameters"
}

test {
    useJUnitPlatform() {
        if (project.hasProperty("groups")) {
            includeTags "$groups"
        }
        if (project.hasProperty("excludedGroups")) {
            excludeTags "$excludedGroups"
        }
    }

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }

    systemProperties System.properties

    if (project.hasProperty("excludeTests")) {
        "$excludeTests".split(",").each { excludeTests ->
            exclude excludeTests
        }
    }

    if (project.hasProperty("parallel")) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }

    ext.failedTests = []

    tasks.withType(Test) {
        afterTest { TestDescriptor descriptor, TestResult result ->
            if(result.resultType == org.gradle.api.tasks.testing.TestResult.ResultType.FAILURE) {
                failedTests << ["${descriptor.className}::${descriptor.name}"]
            }
        }
    }

    gradle.buildFinished {
        if(!failedTests.empty){
            println "Failed test(s) for ${project.name}:"
            failedTests.each { failedTest ->
                println failedTest
            }
        }
    }
}

repositories {
    mavenCentral()

    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext {
    slf4jVersion  = "1.7.32"
    logbackVersion  = "1.2.7"

    seleniumVersion  = "4.0.0"
    junit5Version = "5.8.1"
    assertjVersion  = "3.21.0"
    wdmVersion = "5.0.4-SNAPSHOT"

    rerunnerVersion = "2.1.6"
    browsermobVersion = "2.1.5"
}

dependencies {
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")

    testImplementation("org.seleniumhq.selenium:selenium-java:${seleniumVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("io.github.bonigarcia:webdrivermanager:${wdmVersion}")

    testImplementation("org.seleniumhq.selenium:selenium-grid:${seleniumVersion}")
    testImplementation("io.github.artsok:rerunner-jupiter:${rerunnerVersion}")
    testImplementation("net.lightbody.bmp:browsermob-core:${browsermobVersion}")
}
